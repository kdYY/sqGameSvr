<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.sq.gameDemo.svr.game.characterEntity.dao.UserEntityMapper" >

    <resultMap id="BaseResultMap" type="org.sq.gameDemo.svr.game.characterEntity.model.UserEntity" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="nick" property="nick" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="type_id" property="typeId" jdbcType="INTEGER" />
        <result column="sence_id" property="senceId" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, user_id, nick, state, type_id, sence_id
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.sq.gameDemo.svr.game.characterEntity.model.UserEntityExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user_entity
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from user_entity
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from user_entity
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="org.sq.gameDemo.svr.game.characterEntity.model.UserEntityExample" >
        delete from user_entity
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="org.sq.gameDemo.svr.game.characterEntity.model.UserEntity" >
        insert into user_entity (id, user_id, nick, 
            state, type_id, sence_id
            )
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{nick,jdbcType=VARCHAR}, 
            #{state,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{senceId,jdbcType=INTEGER}
            )
    </insert>

    <insert id="insertSelective" parameterType="org.sq.gameDemo.svr.game.characterEntity.model.UserEntity" >
        insert into user_entity
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="nick != null" >
                nick,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="typeId != null" >
                type_id,
            </if>
            <if test="senceId != null" >
                sence_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="nick != null" >
                #{nick,jdbcType=VARCHAR},
            </if>
            <if test="state != null" >
                #{state,jdbcType=INTEGER},
            </if>
            <if test="typeId != null" >
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="senceId != null" >
                #{senceId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="org.sq.gameDemo.svr.game.characterEntity.model.UserEntityExample" resultType="java.lang.Integer" >
        select count(*) from user_entity
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update user_entity
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null" >
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.nick != null" >
                nick = #{record.nick,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null" >
                state = #{record.state,jdbcType=INTEGER},
            </if>
            <if test="record.typeId != null" >
                type_id = #{record.typeId,jdbcType=INTEGER},
            </if>
            <if test="record.senceId != null" >
                sence_id = #{record.senceId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update user_entity
        set id = #{record.id,jdbcType=INTEGER},
            user_id = #{record.userId,jdbcType=INTEGER},
            nick = #{record.nick,jdbcType=VARCHAR},
            state = #{record.state,jdbcType=INTEGER},
            type_id = #{record.typeId,jdbcType=INTEGER},
            sence_id = #{record.senceId,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="org.sq.gameDemo.svr.game.characterEntity.model.UserEntity" >
        update user_entity
        <set >
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="nick != null" >
                nick = #{nick,jdbcType=VARCHAR},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="typeId != null" >
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="senceId != null" >
                sence_id = #{senceId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.sq.gameDemo.svr.game.characterEntity.model.UserEntity" >
        update user_entity
        set user_id = #{userId,jdbcType=INTEGER},
            nick = #{nick,jdbcType=VARCHAR},
            state = #{state,jdbcType=INTEGER},
            type_id = #{typeId,jdbcType=INTEGER},
            sence_id = #{senceId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="getUserEntityByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from user_entity
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

</mapper>